{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppWrapper = ({\n  children\n}) => {\n  _s();\n  useEffect(() => {\n    const applySettings = () => {\n      const savedSettings = localStorage.getItem('weatherAppSettings');\n      if (savedSettings) {\n        const settings = JSON.parse(savedSettings);\n        if (settings.darkMode) {\n          document.body.classList.add(\"dark-mode\");\n        } else {\n          document.body.classList.remove(\"dark-mode\");\n        }\n        if (settings.dynamicBackground) {\n          document.body.classList.add(\"dynamic-background\");\n        } else {\n          document.body.classList.remove(\"dynamic-background\");\n        }\n        if (settings.fontSize) {\n          const getFontSizeValue = size => {\n            switch (size) {\n              case \"Small\":\n                return \"14px\";\n              case \"Medium\":\n                return \"16px\";\n              case \"Large\":\n                return \"18px\";\n              default:\n                return \"16px\";\n            }\n          };\n          document.documentElement.style.fontSize = getFontSizeValue(settings.fontSize);\n        }\n      }\n    };\n    applySettings();\n\n    // Listen for changes to localStorage\n    window.addEventListener('storage', applySettings);\n    return () => {\n      window.removeEventListener('storage', applySettings);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(AppWrapper, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AppWrapper;\nexport default AppWrapper;\nvar _c;\n$RefreshReg$(_c, \"AppWrapper\");","map":{"version":3,"names":["React","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","AppWrapper","children","_s","applySettings","savedSettings","localStorage","getItem","settings","JSON","parse","darkMode","document","body","classList","add","remove","dynamicBackground","fontSize","getFontSizeValue","size","documentElement","style","window","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["/Users/yasiralzaid/Group-8-Weather-App/gui-react-app/src/AppWrapper.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst AppWrapper = ({ children }) => {\n  useEffect(() => {\n    const applySettings = () => {\n      const savedSettings = localStorage.getItem('weatherAppSettings');\n      if (savedSettings) {\n        const settings = JSON.parse(savedSettings);\n        \n        if (settings.darkMode) {\n          document.body.classList.add(\"dark-mode\");\n        } else {\n          document.body.classList.remove(\"dark-mode\");\n        }\n        \n        if (settings.dynamicBackground) {\n          document.body.classList.add(\"dynamic-background\");\n        } else {\n          document.body.classList.remove(\"dynamic-background\");\n        }\n        \n        if (settings.fontSize) {\n          const getFontSizeValue = (size) => {\n            switch (size) {\n              case \"Small\": return \"14px\";\n              case \"Medium\": return \"16px\";\n              case \"Large\": return \"18px\";\n              default: return \"16px\";\n            }\n          };\n          document.documentElement.style.fontSize = getFontSizeValue(settings.fontSize);\n        }\n      }\n    };\n\n    applySettings();\n\n    // Listen for changes to localStorage\n    window.addEventListener('storage', applySettings);\n    \n    return () => {\n      window.removeEventListener('storage', applySettings);\n    };\n  }, []);\n\n  return <>{children}</>;\n};\n\nexport default AppWrapper;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnCP,SAAS,CAAC,MAAM;IACd,MAAMQ,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;MAChE,IAAIF,aAAa,EAAE;QACjB,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;QAE1C,IAAIG,QAAQ,CAACG,QAAQ,EAAE;UACrBC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;QAC1C,CAAC,MAAM;UACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;QAC7C;QAEA,IAAIR,QAAQ,CAACS,iBAAiB,EAAE;UAC9BL,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACnD,CAAC,MAAM;UACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,oBAAoB,CAAC;QACtD;QAEA,IAAIR,QAAQ,CAACU,QAAQ,EAAE;UACrB,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;YACjC,QAAQA,IAAI;cACV,KAAK,OAAO;gBAAE,OAAO,MAAM;cAC3B,KAAK,QAAQ;gBAAE,OAAO,MAAM;cAC5B,KAAK,OAAO;gBAAE,OAAO,MAAM;cAC3B;gBAAS,OAAO,MAAM;YACxB;UACF,CAAC;UACDR,QAAQ,CAACS,eAAe,CAACC,KAAK,CAACJ,QAAQ,GAAGC,gBAAgB,CAACX,QAAQ,CAACU,QAAQ,CAAC;QAC/E;MACF;IACF,CAAC;IAEDd,aAAa,CAAC,CAAC;;IAEf;IACAmB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEpB,aAAa,CAAC;IAEjD,OAAO,MAAM;MACXmB,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAErB,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOJ,OAAA,CAAAF,SAAA;IAAAI,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACC,EAAA,CA5CIF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}