{"ast":null,"code":"var _jsxFileName = \"/Users/yasiralzaid/Group-8-Weather-App/gui-react-app/src/pages/home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./reset.css\";\nimport \"./homestyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"fa0315bf1aaefb0d246fe0e1feeca3b3\";\nconst activityImages = [{\n  imgSrc: \"/image11.png\",\n  alt: \"Basketball\"\n}, {\n  imgSrc: \"/image12.png\",\n  alt: \"Running\"\n}, {\n  imgSrc: \"/image13.png\",\n  alt: \"Football\"\n}];\nfunction Home() {\n  _s();\n  const [hourlyTemps, setHourlyTemps] = useState([]);\n  const [dailyTemps, setDailyTemps] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(null);\n  const [feelsLike, setFeelsLike] = useState(null);\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [city, setCity] = useState(\"\");\n  const [settings, setSettings] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\n\n  // Load settings from localStorage\n  useEffect(() => {\n    const loadSettings = () => {\n      const savedSettings = localStorage.getItem('weatherAppSettings');\n      if (savedSettings) {\n        setSettings(JSON.parse(savedSettings));\n      } else {\n        // Default settings if none found\n        setSettings({\n          temperatureUnit: \"celsius\",\n          currentLocation: \"A\",\n          manualLocation: \"\",\n          updateFrequency: 60 * 60 * 1000 // 1 hour in milliseconds\n        });\n      }\n    };\n    loadSettings();\n    // Add event listener for settings changes\n    window.addEventListener('storage', loadSettings);\n    return () => {\n      window.removeEventListener('storage', loadSettings);\n    };\n  }, []);\n\n  // Set up location based on settings\n  useEffect(() => {\n    if (!settings) return;\n    const getLocation = async () => {\n      if (settings.currentLocation === \"A\") {\n        // Use automatic geolocation\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(position => {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            setLat(latitude);\n            setLon(longitude);\n          }, error => {\n            console.error(\"Error getting location:\", error);\n            setLat(51.525012);\n            setLon(-0.033456);\n          });\n        } else {\n          console.log(\"Geolocation is not supported by this browser.\");\n          setLat(51.525012);\n          setLon(-0.033456);\n        }\n      } else if (settings.currentLocation === \"M\" && settings.manualLocation) {\n        // Use manual location\n        try {\n          const geocodeURL = `https://api.openweathermap.org/geo/1.0/direct?q=${encodeURIComponent(settings.manualLocation)}&limit=1&appid=${apiKey}`;\n          const response = await fetch(geocodeURL);\n          const data = await response.json();\n          if (data && data.length > 0) {\n            setLat(data[0].lat);\n            setLon(data[0].lon);\n          } else {\n            console.error(\"Location not found\");\n            // Fall back to default location\n            setLat(51.525012);\n            setLon(-0.033456);\n          }\n        } catch (error) {\n          console.error(\"Error getting location coordinates:\", error);\n          setLat(51.525012);\n          setLon(-0.033456);\n        }\n      } else {\n        // Fall back to default location\n        setLat(51.525012);\n        setLon(-0.033456);\n      }\n    };\n    getLocation();\n  }, [settings]);\n\n  // Periodic updates based on settings\n  useEffect(() => {\n    if (!settings) return;\n    const updateInterval = setInterval(() => {\n      if (Date.now() - lastUpdate >= settings.updateFrequency) {\n        setLastUpdate(Date.now());\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(updateInterval);\n  }, [settings, lastUpdate]);\n\n  // Fetch weather data\n  useEffect(() => {\n    if (!lat || !lon || !settings) return;\n    const units = \"metric\";\n    const currentApiURL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    const hourlyApiURL = `https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    const dailyApiURL = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&cnt=5&appid=${apiKey}&units=${units}`;\n    fetch(currentApiURL).then(response => response.json()).then(data => {\n      console.log(\"Current Weather API response:\", data);\n      if (data.cod !== 200) {\n        throw new Error(\"Error fetching current weather data\");\n      }\n      const cityName = data.name;\n      if (data.weather && Array.isArray(data.weather) && data.weather.length > 0) {\n        const {\n          temp,\n          feels_like\n        } = data.main;\n        const weatherIconCode = data.weather[0].icon;\n        const windSpeedInMph = data.wind ? (data.wind.speed * 2.237).toFixed(1) : \"N/A\";\n        setCity(cityName);\n        setCurrentWeather(temp);\n        setFeelsLike(feels_like);\n        setWindSpeed(windSpeedInMph);\n        setWeatherIcon(getWeatherIcon(weatherIconCode));\n      } else {\n        throw new Error(\"Weather data is missing or malformed.\");\n      }\n    }).catch(error => {\n      console.error(\"❌ Error fetching current weather data:\", error.message);\n    });\n    fetch(hourlyApiURL).then(response => response.json()).then(data => {\n      if (!data.list) throw new Error(\"Invalid API response format\");\n      const now = new Date();\n      const currentHour = now.getHours();\n      const filteredForecasts = data.list.filter(item => {\n        const forecastDate = new Date(item.dt * 1000);\n        const forecastHour = forecastDate.getHours();\n        return forecastHour > currentHour && forecastHour < 24;\n      });\n      const nextFiveHours = filteredForecasts.slice(0, 5).map(item => ({\n        time: new Date(item.dt * 1000).toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        }),\n        imgSrc: getWeatherIcon(item.weather[0].icon),\n        alt: item.weather[0].description,\n        temp: formatTemperature(item.main.temp)\n      }));\n      setHourlyTemps([{\n        time: \"Now\",\n        imgSrc: weatherIcon,\n        alt: \"Current weather\",\n        temp: currentWeather ? formatTemperature(currentWeather) : \"Loading...\"\n      }, ...nextFiveHours]);\n    }).catch(error => console.error(\"❌ Error fetching weather data:\", error));\n    fetch(dailyApiURL).then(response => response.json()).then(data => {\n      if (!data.list) throw new Error(\"Invalid API response format\");\n      const nextSevenDays = data.list.map((item, index) => {\n        const date = new Date(item.dt * 1000);\n        const dayName = date.toLocaleDateString(\"en-US\", {\n          weekday: \"long\"\n        });\n        return {\n          day: index === 0 ? \"Today\" : dayName,\n          temp: `${formatTemperature(item.temp.max, false)}/${formatTemperature(item.temp.min, false)}`,\n          imgSrc: getWeatherIcon(item.weather[0].icon),\n          alt: item.weather[0].description\n        };\n      });\n      setDailyTemps(nextSevenDays);\n    }).catch(error => console.error(\"❌ Error fetching daily forecast:\", error));\n  }, [lat, lon, lastUpdate, settings]);\n  function getWeatherIcon(iconCode) {\n    return `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n  }\n\n  // Format temperature based on settings\n  function formatTemperature(temp, includeUnit = true) {\n    if (!settings) return `${Math.round(temp)}°C`;\n    if (settings.temperatureUnit === \"kelvin\") {\n      const kelvin = temp + 273.15;\n      return includeUnit ? `${Math.round(kelvin)}K` : `${Math.round(kelvin)}`;\n    } else {\n      return includeUnit ? `${Math.round(temp)}°C` : `${Math.round(temp)}°`;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"home-locationBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-weatherimage\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/locationimage.png\",\n          alt: \"Background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-locationtext\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: city ? `${city}` : \"Loading location...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"home-weatherBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-currentweather\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currentWeather ? formatTemperature(currentWeather) : \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-weathericon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: weatherIcon || \"/defaultIcon.png\",\n          alt: \"Current Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-windspeed\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: windSpeed ? `Wind Speed: ${windSpeed} mph` : \"Loading wind speed...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-feelslike\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: feelsLike !== null ? `Feels like ${formatTemperature(feelsLike)}` : \"Loading feels like...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"home-tempBox\",\n      children: [hourlyTemps.map((hourlyTemp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-miniTemp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hourlyTemp.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hourlyTemp.imgSrc,\n          alt: hourlyTemp.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hourlyTemp.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-miniTemp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/graph\",\n          className: \"miniTempLink\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dailyTempBox\",\n      children: dailyTemps.map((dailyTemp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dailyTemp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: dailyTemp.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dailyTemp.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: dailyTemp.imgSrc,\n          alt: dailyTemp.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"activitiesBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Best activities to do today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activityImages\",\n        children: activityImages.map((activityImage, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: activityImage.imgSrc,\n            alt: activityImage.alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"pSYIZ7Uii/5s2DK285GiDqDz+iM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","apiKey","activityImages","imgSrc","alt","Home","_s","hourlyTemps","setHourlyTemps","dailyTemps","setDailyTemps","currentWeather","setCurrentWeather","weatherIcon","setWeatherIcon","windSpeed","setWindSpeed","feelsLike","setFeelsLike","lat","setLat","lon","setLon","city","setCity","settings","setSettings","lastUpdate","setLastUpdate","Date","now","loadSettings","savedSettings","localStorage","getItem","JSON","parse","temperatureUnit","currentLocation","manualLocation","updateFrequency","window","addEventListener","removeEventListener","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","console","log","geocodeURL","encodeURIComponent","response","fetch","data","json","length","updateInterval","setInterval","clearInterval","units","currentApiURL","hourlyApiURL","dailyApiURL","then","cod","Error","cityName","name","weather","Array","isArray","temp","feels_like","main","weatherIconCode","icon","windSpeedInMph","wind","speed","toFixed","getWeatherIcon","catch","message","list","currentHour","getHours","filteredForecasts","filter","item","forecastDate","dt","forecastHour","nextFiveHours","slice","map","time","toLocaleTimeString","hour","minute","description","formatTemperature","nextSevenDays","index","date","dayName","toLocaleDateString","weekday","day","max","min","iconCode","includeUnit","Math","round","kelvin","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","hourlyTemp","to","dailyTemp","activityImage","_c","$RefreshReg$"],"sources":["/Users/yasiralzaid/Group-8-Weather-App/gui-react-app/src/pages/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./reset.css\";\nimport \"./homestyle.css\";\n\nconst apiKey = \"fa0315bf1aaefb0d246fe0e1feeca3b3\";\n\nconst activityImages = [\n  { imgSrc: \"/image11.png\", alt: \"Basketball\" },\n  { imgSrc: \"/image12.png\", alt: \"Running\" },\n  { imgSrc: \"/image13.png\", alt: \"Football\" },\n];\n\nfunction Home() {\n  const [hourlyTemps, setHourlyTemps] = useState([]);\n  const [dailyTemps, setDailyTemps] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(null);\n  const [feelsLike, setFeelsLike] = useState(null);\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [city, setCity] = useState(\"\");\n  const [settings, setSettings] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\n\n  // Load settings from localStorage\n  useEffect(() => {\n    const loadSettings = () => {\n      const savedSettings = localStorage.getItem('weatherAppSettings');\n      if (savedSettings) {\n        setSettings(JSON.parse(savedSettings));\n      } else {\n        // Default settings if none found\n        setSettings({\n          temperatureUnit: \"celsius\",\n          currentLocation: \"A\",\n          manualLocation: \"\",\n          updateFrequency: 60 * 60 * 1000, // 1 hour in milliseconds\n        });\n      }\n    };\n\n    loadSettings();\n    // Add event listener for settings changes\n    window.addEventListener('storage', loadSettings);\n    \n    return () => {\n      window.removeEventListener('storage', loadSettings);\n    };\n  }, []);\n\n  // Set up location based on settings\n  useEffect(() => {\n    if (!settings) return;\n\n    const getLocation = async () => {\n      if (settings.currentLocation === \"A\") {\n        // Use automatic geolocation\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              const latitude = position.coords.latitude;\n              const longitude = position.coords.longitude;\n              setLat(latitude);\n              setLon(longitude);\n            },\n            (error) => {\n              console.error(\"Error getting location:\", error);\n              setLat(51.525012);\n              setLon(-0.033456);\n            }\n          );\n        } else {\n          console.log(\"Geolocation is not supported by this browser.\");\n          setLat(51.525012);\n          setLon(-0.033456);\n        }\n      } else if (settings.currentLocation === \"M\" && settings.manualLocation) {\n        // Use manual location\n        try {\n          const geocodeURL = `https://api.openweathermap.org/geo/1.0/direct?q=${encodeURIComponent(settings.manualLocation)}&limit=1&appid=${apiKey}`;\n          const response = await fetch(geocodeURL);\n          const data = await response.json();\n          \n          if (data && data.length > 0) {\n            setLat(data[0].lat);\n            setLon(data[0].lon);\n          } else {\n            console.error(\"Location not found\");\n            // Fall back to default location\n            setLat(51.525012);\n            setLon(-0.033456);\n          }\n        } catch (error) {\n          console.error(\"Error getting location coordinates:\", error);\n          setLat(51.525012);\n          setLon(-0.033456);\n        }\n      } else {\n        // Fall back to default location\n        setLat(51.525012);\n        setLon(-0.033456);\n      }\n    };\n\n    getLocation();\n  }, [settings]);\n\n  // Periodic updates based on settings\n  useEffect(() => {\n    if (!settings) return;\n\n    const updateInterval = setInterval(() => {\n      if (Date.now() - lastUpdate >= settings.updateFrequency) {\n        setLastUpdate(Date.now());\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(updateInterval);\n  }, [settings, lastUpdate]);\n\n  // Fetch weather data\n  useEffect(() => {\n    if (!lat || !lon || !settings) return;\n\n    const units = \"metric\";\n    const currentApiURL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    const hourlyApiURL = `https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    const dailyApiURL = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&cnt=5&appid=${apiKey}&units=${units}`;\n\n    fetch(currentApiURL)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Current Weather API response:\", data);\n        if (data.cod !== 200) {\n          throw new Error(\"Error fetching current weather data\");\n        }\n\n        const cityName = data.name;\n\n        if (data.weather && Array.isArray(data.weather) && data.weather.length > 0) {\n          const { temp, feels_like } = data.main;\n          const weatherIconCode = data.weather[0].icon;\n          const windSpeedInMph = data.wind ? (data.wind.speed * 2.237).toFixed(1) : \"N/A\";\n\n          setCity(cityName);\n          setCurrentWeather(temp);\n          setFeelsLike(feels_like);\n          setWindSpeed(windSpeedInMph);\n          setWeatherIcon(getWeatherIcon(weatherIconCode));\n        } else {\n          throw new Error(\"Weather data is missing or malformed.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"❌ Error fetching current weather data:\", error.message);\n      });\n\n    fetch(hourlyApiURL)\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.list) throw new Error(\"Invalid API response format\");\n\n        const now = new Date();\n        const currentHour = now.getHours();\n\n        const filteredForecasts = data.list.filter((item) => {\n          const forecastDate = new Date(item.dt * 1000);\n          const forecastHour = forecastDate.getHours();\n          return forecastHour > currentHour && forecastHour < 24;\n        });\n\n        const nextFiveHours = filteredForecasts.slice(0, 5).map((item) => ({\n          time: new Date(item.dt * 1000).toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n          }),\n          imgSrc: getWeatherIcon(item.weather[0].icon),\n          alt: item.weather[0].description,\n          temp: formatTemperature(item.main.temp),\n        }));\n\n        setHourlyTemps([\n          { \n            time: \"Now\", \n            imgSrc: weatherIcon, \n            alt: \"Current weather\", \n            temp: currentWeather ? formatTemperature(currentWeather) : \"Loading...\" \n          }, \n          ...nextFiveHours\n        ]);\n      })\n      .catch((error) => console.error(\"❌ Error fetching weather data:\", error));\n\n    fetch(dailyApiURL)\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.list) throw new Error(\"Invalid API response format\");\n\n        const nextSevenDays = data.list.map((item, index) => {\n          const date = new Date(item.dt * 1000);\n          const dayName = date.toLocaleDateString(\"en-US\", { weekday: \"long\" });\n\n          return {\n            day: index === 0 ? \"Today\" : dayName,\n            temp: `${formatTemperature(item.temp.max, false)}/${formatTemperature(item.temp.min, false)}`,\n            imgSrc: getWeatherIcon(item.weather[0].icon),\n            alt: item.weather[0].description,\n          };\n        });\n\n        setDailyTemps(nextSevenDays);\n      })\n      .catch((error) => console.error(\"❌ Error fetching daily forecast:\", error));\n  }, [lat, lon, lastUpdate, settings]);\n\n  function getWeatherIcon(iconCode) {\n    return `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n  }\n\n  // Format temperature based on settings\n  function formatTemperature(temp, includeUnit = true) {\n    if (!settings) return `${Math.round(temp)}°C`;\n    \n    if (settings.temperatureUnit === \"kelvin\") {\n      const kelvin = temp + 273.15;\n      return includeUnit ? `${Math.round(kelvin)}K` : `${Math.round(kelvin)}`;\n    } else {\n      return includeUnit ? `${Math.round(temp)}°C` : `${Math.round(temp)}°`;\n    }\n  }\n\n  return (\n    <section className=\"app\">\n      {/* Location flex box */}\n      <section className=\"home-locationBox\">\n        <div className=\"home-weatherimage\">\n          <img src=\"/locationimage.png\" alt=\"Background\" />\n        </div>\n        <div className=\"home-locationtext\">\n          <h1>{city ? `${city}` : \"Loading location...\"}</h1>\n        </div>\n      </section>\n      {/* Weather flex box */}\n      <section className=\"home-weatherBox\">\n        <div className=\"home-currentweather\">\n          <h1>{currentWeather ? formatTemperature(currentWeather) : \"Loading...\"}</h1>\n        </div>\n        <div className=\"home-weathericon\">\n          <img\n            src={weatherIcon || \"/defaultIcon.png\"}\n            alt=\"Current Weather\"\n          />\n        </div>\n        <div className=\"home-windspeed\">\n          <h1>{windSpeed ? `Wind Speed: ${windSpeed} mph` : \"Loading wind speed...\"}</h1>\n        </div>\n        <div className=\"home-feelslike\">\n          <h1>\n            {feelsLike !== null\n              ? `Feels like ${formatTemperature(feelsLike)}`\n              : \"Loading feels like...\"}\n          </h1>\n        </div>\n      </section>\n      {/* Hourly temperature overview */}\n      <section className=\"home-tempBox\">\n        {hourlyTemps.map((hourlyTemp, index) => (\n          <div className=\"home-miniTemp\" key={index}>\n            <h1>{hourlyTemp.time}</h1>\n            <img src={hourlyTemp.imgSrc} alt={hourlyTemp.alt} />\n            <h1>{hourlyTemp.temp}</h1>\n          </div>\n        ))}\n        <div className=\"home-miniTemp\">\n          <h1></h1>\n          <Link to=\"/graph\" className=\"miniTempLink\">\n            ...\n          </Link>\n          <h1></h1>\n        </div>\n      </section>\n      {/* Daily temperature overview */}\n      <section className=\"dailyTempBox\">\n        {dailyTemps.map((dailyTemp, index) => (\n          <div className=\"dailyTemp\" key={index}>\n            <h1>{dailyTemp.day}</h1>\n            <h2>{dailyTemp.temp}</h2>\n            <img src={dailyTemp.imgSrc} alt={dailyTemp.alt} />\n          </div>\n        ))}\n      </section>\n      {/* Activities flex box */}\n      <section className=\"activitiesBox\">\n        <h1>Best activities to do today</h1>\n        <div className=\"activityImages\">\n          {activityImages.map((activityImage, index) => (\n            <div className=\"activity\" key={index}>\n              <img src={activityImage.imgSrc} alt={activityImage.alt} />\n            </div>\n          ))}\n        </div>\n      </section>\n    </section>\n  );\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}