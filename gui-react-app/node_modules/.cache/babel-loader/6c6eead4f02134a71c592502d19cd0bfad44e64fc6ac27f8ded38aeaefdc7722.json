{"ast":null,"code":"var _jsxFileName = \"/Users/yasiralzaid/Group-8-Weather-App/gui-react-app/src/pages/graph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./reset.css\";\nimport \"./graphmain.css\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst apiKey = \"fa0315bf1aaefb0d246fe0e1feeca3b3\";\nconst activityImages = [{\n  imgSrc: \"/image11.png\",\n  alt: \"Basketball\"\n}, {\n  imgSrc: \"/image12.png\",\n  alt: \"Running\"\n}, {\n  imgSrc: \"/image13.png\",\n  alt: \"Football\"\n}];\nfunction GraphMain() {\n  _s();\n  const [hourlyTemps, setHourlyTemps] = useState([]);\n  const [dailyTemps, setDailyTemps] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(null);\n  const [feelsLike, setFeelsLike] = useState(null);\n  const [hourlyHumidity, setHourlyHumidity] = useState([]);\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [city, setCity] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  const [dynamicBackground, setDynamicBackground] = useState(false);\n  useEffect(() => {\n    const loadSettings = () => {\n      const savedSettings = localStorage.getItem('weatherAppSettings');\n      if (savedSettings) {\n        const parsedSettings = JSON.parse(savedSettings);\n        setDarkMode(parsedSettings.darkMode || false);\n        setDynamicBackground(parsedSettings.dynamicBackground || false);\n      }\n    };\n\n    // Initial load\n    loadSettings();\n\n    // Listen for changes\n    window.addEventListener('storage', loadSettings);\n    return () => {\n      window.removeEventListener('storage', loadSettings);\n    };\n  }, []);\n  useEffect(() => {\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          setLat(latitude);\n          setLon(longitude);\n        }, error => {\n          console.error(\"Error getting location:\", error);\n          setLat(51.525012);\n          setLon(-0.033456);\n        });\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n        setLat(51.525012);\n        setLon(-0.033456);\n      }\n    };\n    getLocation();\n  }, []);\n  useEffect(() => {\n    if (lat && lon) {\n      const units = \"metric\";\n      const currentApiURL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n      const hourlyApiURL = `https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n      const dailyApiURL = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&cnt=6&appid=${apiKey}&units=${units}`;\n      fetch(currentApiURL).then(response => response.json()).then(data => {\n        console.log(\"Current Weather API response:\", data);\n        if (data.cod !== 200) {\n          throw new Error(\"Error fetching current weather data\");\n        }\n        const cityName = data.name;\n        if (data.weather && Array.isArray(data.weather) && data.weather.length > 0) {\n          const {\n            temp,\n            feels_like\n          } = data.main;\n          const weatherIconCode = data.weather[0].icon;\n          const windSpeedInMph = data.wind ? (data.wind.speed * 2.237).toFixed(1) : \"N/A\";\n          setCity(cityName);\n          setCurrentWeather(temp);\n          setFeelsLike(feels_like);\n          setWindSpeed(windSpeedInMph);\n          setWeatherIcon(getWeatherIcon(weatherIconCode));\n        } else {\n          throw new Error(\"Weather data is missing or malformed.\");\n        }\n      }).catch(error => {\n        console.error(\"❌ Error fetching current weather data:\", error.message);\n      });\n      fetch(hourlyApiURL).then(response => response.json()).then(data => {\n        if (!data.list) throw new Error(\"Invalid API response format\");\n        console.log(\"Hourly Weather API response:\", data);\n        const now = new Date();\n        const currentHour = now.getHours();\n        const filteredForecasts = data.list.filter(item => {\n          const forecastDate = new Date(item.dt * 1000);\n          const forecastHour = forecastDate.getHours();\n          return forecastHour > currentHour && forecastHour < 24;\n        });\n        const nextFiveHours = filteredForecasts.slice(0, 24).map(item => ({\n          time: new Date(item.dt * 1000).toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          }),\n          imgSrc: getWeatherIcon(item.weather[0].icon),\n          alt: item.weather[0].description,\n          temp: `${Math.round(item.main.temp)}°C`\n        }));\n        setHourlyTemps([{\n          time: \"Now\",\n          imgSrc: weatherIcon,\n          alt: \"Current weather\",\n          temp: `${Math.round(currentWeather)}°C`\n        }, ...nextFiveHours]);\n        const humidityData = filteredForecasts.slice(0, 24).map(item => {\n          const date = new Date(item.dt * 1000);\n          const hour = date.toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          });\n          return {\n            hour: hour,\n            humidity: item.main.humidity\n          };\n        });\n        console.log(\"✅ Hourly Humidity Data:\", humidityData);\n        setHourlyHumidity(humidityData);\n      }).catch(error => console.error(\"❌ Error fetching weather data:\", error));\n      fetch(dailyApiURL).then(response => response.json()).then(data => {\n        console.log(\"Daily Weather API response:\", data);\n        if (!data.list) throw new Error(\"Invalid API response format\");\n        const nextSevenDays = data.list.map((item, index) => {\n          const date = new Date(item.dt * 1000);\n          const dayName = date.toLocaleDateString(\"en-US\", {\n            weekday: \"long\"\n          });\n          return {\n            day: index === 0 ? \"Today\" : dayName,\n            temp: `${Math.round(item.temp.max)}°/${Math.round(item.temp.min)}°`,\n            imgSrc: getWeatherIcon(item.weather[0].icon),\n            alt: item.weather[0].description\n          };\n        });\n        setDailyTemps(nextSevenDays);\n      }).catch(error => console.error(\"❌ Error fetching daily forecast:\", error));\n    }\n  }, [lat, lon, currentWeather, weatherIcon]);\n  function getWeatherIcon(iconCode) {\n    return `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n  }\n\n  // Create a className for the main container with theme modifiers\n  const graphClasses = `graph-app${darkMode ? ' dark-mode' : ''}${dynamicBackground ? ' dynamic-background' : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: graphClasses,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"locationBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherimage\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/locationimage.png\",\n          alt: \"Background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"locationtext\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: city ? `${city}` : \"Loading location...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"weatherBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentweather\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currentWeather ? `${Math.round(currentWeather)}°C` : \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weathericon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: weatherIcon || \"/defaultIcon.png\" // fallback to default icon if loading\n          ,\n          alt: \"Current Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"windspeed\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: windSpeed ? `Wind Speed: ${windSpeed} mph` : \"Loading wind speed...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feelslike\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: feelsLike !== null ? `Feels like ${Math.round(feelsLike)}°C` : \"Loading feels like...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tempBox\",\n      children: [hourlyTemps.map((hourlyTemp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"miniTemp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hourlyTemp.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hourlyTemp.imgSrc,\n          alt: hourlyTemp.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hourlyTemp.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"miniTemp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), hourlyHumidity.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"humidityBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"24-Hour Humidity Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowX: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            minWidth: \"800px\",\n            height: \"300px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: hourlyHumidity.map(data => data.hour),\n              datasets: [{\n                label: \"Humidity (%)\",\n                data: hourlyHumidity.map(data => data.humidity),\n                fill: true,\n                borderColor: \"#2196F3\",\n                backgroundColor: \"rgba(2, 14, 24, 0.9)\",\n                tension: 0.4\n              }]\n            },\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  position: \"top\"\n                },\n                title: {\n                  display: true,\n                  text: \"Humidity Over Time\",\n                  font: {\n                    size: 20\n                  }\n                }\n              },\n              scales: {\n                y: {\n                  title: {\n                    display: true,\n                    text: \"Humidity (%)\",\n                    font: {\n                      size: 16\n                    }\n                  },\n                  min: 0,\n                  max: 100\n                },\n                x: {\n                  title: {\n                    display: true,\n                    text: \"Hour\",\n                    font: {\n                      size: 16\n                    }\n                  },\n                  ticks: {\n                    maxRotation: 90,\n                    minRotation: 45,\n                    font: {\n                      size: 14\n                    }\n                  }\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphMain, \"e8/HgwYCOJzPmEBlWEqSVG6YPi0=\");\n_c = GraphMain;\nexport default GraphMain;\nvar _c;\n$RefreshReg$(_c, \"GraphMain\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","apiKey","activityImages","imgSrc","alt","GraphMain","_s","hourlyTemps","setHourlyTemps","dailyTemps","setDailyTemps","currentWeather","setCurrentWeather","weatherIcon","setWeatherIcon","windSpeed","setWindSpeed","feelsLike","setFeelsLike","hourlyHumidity","setHourlyHumidity","lat","setLat","lon","setLon","city","setCity","darkMode","setDarkMode","dynamicBackground","setDynamicBackground","loadSettings","savedSettings","localStorage","getItem","parsedSettings","JSON","parse","window","addEventListener","removeEventListener","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","console","log","units","currentApiURL","hourlyApiURL","dailyApiURL","fetch","then","response","json","data","cod","Error","cityName","name","weather","Array","isArray","length","temp","feels_like","main","weatherIconCode","icon","windSpeedInMph","wind","speed","toFixed","getWeatherIcon","catch","message","list","now","Date","currentHour","getHours","filteredForecasts","filter","item","forecastDate","dt","forecastHour","nextFiveHours","slice","map","time","toLocaleTimeString","hour","minute","description","Math","round","humidityData","date","humidity","nextSevenDays","index","dayName","toLocaleDateString","weekday","day","max","min","iconCode","graphClasses","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","hourlyTemp","style","overflowX","minWidth","height","labels","datasets","label","fill","borderColor","backgroundColor","tension","options","responsive","maintainAspectRatio","plugins","legend","title","display","text","font","size","scales","y","x","ticks","maxRotation","minRotation","_c","$RefreshReg$"],"sources":["/Users/yasiralzaid/Group-8-Weather-App/gui-react-app/src/pages/graph.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./reset.css\"; \nimport \"./graphmain.css\";\n\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n\n\nconst apiKey = \"fa0315bf1aaefb0d246fe0e1feeca3b3\";\n\nconst activityImages = [\n  { imgSrc: \"/image11.png\", alt: \"Basketball\" },\n  { imgSrc: \"/image12.png\", alt: \"Running\" },\n  { imgSrc: \"/image13.png\", alt: \"Football\" },\n];\n\nfunction GraphMain() {\n  const [hourlyTemps, setHourlyTemps] = useState([]);\n  const [dailyTemps, setDailyTemps] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(null);\n  const [feelsLike, setFeelsLike] = useState(null);\n  const [hourlyHumidity, setHourlyHumidity] = useState([]);\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [city, setCity] = useState(\"\"); \n  const [darkMode, setDarkMode] = useState(false);\n  const [dynamicBackground, setDynamicBackground] = useState(false);\n  \n  useEffect(() => {\n    const loadSettings = () => {\n      const savedSettings = localStorage.getItem('weatherAppSettings');\n      if (savedSettings) {\n        const parsedSettings = JSON.parse(savedSettings);\n        setDarkMode(parsedSettings.darkMode || false);\n        setDynamicBackground(parsedSettings.dynamicBackground || false);\n      }\n    };\n    \n    // Initial load\n    loadSettings();\n    \n    // Listen for changes\n    window.addEventListener('storage', loadSettings);\n    \n    return () => {\n      window.removeEventListener('storage', loadSettings);\n    };\n  }, []);\n  \n  useEffect(() => {\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            setLat(latitude);\n            setLon(longitude);\n          },\n          (error) => {\n            console.error(\"Error getting location:\", error);\n            setLat(51.525012);  \n            setLon(-0.033456);   \n          }\n        );\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n        setLat(51.525012);  \n        setLon(-0.033456);  \n      }\n    };\n\n    getLocation();\n  }, []);\n\n  useEffect(() => {\n    if (lat && lon) {\n      const units = \"metric\";\n      const currentApiURL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n      const hourlyApiURL = `https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n      const dailyApiURL = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&cnt=6&appid=${apiKey}&units=${units}`;\n      \n      fetch(currentApiURL)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Current Weather API response:\", data);\n          if (data.cod !== 200) {\n            throw new Error(\"Error fetching current weather data\");\n          }\n\n          const cityName = data.name;\n\n          if (data.weather && Array.isArray(data.weather) && data.weather.length > 0) {\n            const { temp, feels_like } = data.main;\n            const weatherIconCode = data.weather[0].icon;\n            const windSpeedInMph = data.wind ? (data.wind.speed * 2.237).toFixed(1) : \"N/A\"; \n\n            setCity(cityName); \n            setCurrentWeather(temp);\n            setFeelsLike(feels_like);\n            setWindSpeed(windSpeedInMph); \n            setWeatherIcon(getWeatherIcon(weatherIconCode));\n\n          } else {\n            throw new Error(\"Weather data is missing or malformed.\");\n          }\n        })\n        .catch((error) => {\n          console.error(\"❌ Error fetching current weather data:\", error.message);\n        });\n\n      fetch(hourlyApiURL)\n        .then((response) => response.json())\n        .then((data) => {\n          if (!data.list) throw new Error(\"Invalid API response format\");\n\n          console.log(\"Hourly Weather API response:\", data);\n\n          const now = new Date();\n          const currentHour = now.getHours();\n\n\n          const filteredForecasts = data.list.filter((item) => {\n            const forecastDate = new Date(item.dt * 1000);\n            const forecastHour = forecastDate.getHours();\n            return forecastHour > currentHour && forecastHour < 24;\n          });\n\n          const nextFiveHours = filteredForecasts.slice(0, 24).map((item) => ({\n            time: new Date(item.dt * 1000).toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n            }),\n            imgSrc: getWeatherIcon(item.weather[0].icon),\n            alt: item.weather[0].description,\n            temp: `${Math.round(item.main.temp)}°C`,\n\n\n          }));\n\n          setHourlyTemps([{ time: \"Now\", imgSrc: weatherIcon, alt: \"Current weather\", temp: `${Math.round(currentWeather)}°C` }, ...nextFiveHours]);\n\n          const humidityData = filteredForecasts.slice(0, 24).map((item) => {\n            const date = new Date(item.dt * 1000);\n            const hour = date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\"});\n            return {\n              hour: hour,\n              humidity: item.main.humidity,\n            };\n          });\n          console.log(\"✅ Hourly Humidity Data:\", humidityData);\n          setHourlyHumidity(humidityData);\n\n          \n\n\n        })\n        .catch((error) => console.error(\"❌ Error fetching weather data:\", error));\n\n        fetch(dailyApiURL)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Daily Weather API response:\", data);\n          if (!data.list) throw new Error(\"Invalid API response format\");\n\n          const nextSevenDays = data.list.map((item, index) => {\n            const date = new Date(item.dt * 1000);\n            const dayName = date.toLocaleDateString(\"en-US\", { weekday: \"long\" });\n\n            return {\n              day: index === 0 ? \"Today\" : dayName,\n              temp: `${Math.round(item.temp.max)}°/${Math.round(item.temp.min)}°`,\n              imgSrc: getWeatherIcon(item.weather[0].icon),\n              alt: item.weather[0].description,\n            };\n          });\n\n          setDailyTemps(nextSevenDays);\n        })\n        .catch((error) => console.error(\"❌ Error fetching daily forecast:\", error));\n\n    }\n  }, [lat, lon, currentWeather, weatherIcon]); \n\n\n  function getWeatherIcon(iconCode) {\n    return `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n  }\n\n  // Create a className for the main container with theme modifiers\n  const graphClasses = `graph-app${darkMode ? ' dark-mode' : ''}${dynamicBackground ? ' dynamic-background' : ''}`;\n\n  return (\n    <section className={graphClasses}>\n      {/* Location flex box */}\n      <section className=\"locationBox\">\n        <div className=\"weatherimage\">\n          <img src=\"/locationimage.png\" alt=\"Background\" />\n        </div>\n        <div className=\"locationtext\">\n          <h1>{city ? `${city}` : \"Loading location...\"}</h1>\n        </div>\n      </section>\n      {/* Weather flex box */}\n      <section className=\"weatherBox\">\n        <div className=\"currentweather\">\n          <h1>{currentWeather ? `${Math.round(currentWeather)}°C` : \"Loading...\"}</h1>\n        </div>\n        <div className=\"weathericon\">\n          <img src={weatherIcon || \"/defaultIcon.png\"} // fallback to default icon if loading\n            alt=\"Current Weather\"/>\n        </div>\n        <div className=\"windspeed\">\n          <h1>{windSpeed ? `Wind Speed: ${windSpeed} mph` : \"Loading wind speed...\"}</h1>\n        </div>\n        <div className=\"feelslike\">\n          <h1>{feelsLike !== null ? `Feels like ${Math.round(feelsLike)}°C` : \"Loading feels like...\"}</h1>\n        </div>\n      </section> \n      {/* Hourly temperature overview */}\n      <section className=\"tempBox\">\n        {hourlyTemps.map((hourlyTemp, index) => (\n          <div className=\"miniTemp\" key={index}>\n            <h1>{hourlyTemp.time}</h1>\n            <img src={hourlyTemp.imgSrc} alt={hourlyTemp.alt} />\n            <h1>{hourlyTemp.temp}</h1>\n          </div>\n        ))}\n        <div className=\"miniTemp\">\n          <h1></h1>\n          <h1></h1>\n        </div>\n      </section>\n\n\n\n      {/* Daily Humidity Graph */}\n      {hourlyHumidity.length > 0 && (\n        <section className=\"humidityBox\">\n          <h2>24-Hour Humidity Forecast</h2>\n          <div style={{ overflowX: \"auto\" }}>\n            <div style={{ minWidth: \"800px\", height: \"300px\" }}>\n              <Line\n                data={{\n                  labels: hourlyHumidity.map((data) => data.hour),\n                  datasets: [\n                    {\n                      label: \"Humidity (%)\",\n                      data: hourlyHumidity.map((data) => data.humidity),\n                      fill: true,\n                      borderColor: \"#2196F3\", \n                      backgroundColor: \"rgba(2, 14, 24, 0.9)\", \n                      tension: 0.4,\n                    },\n                  ],\n                }}\n                options={{\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  plugins: {\n                    legend: { position: \"top\" },\n                    title: {\n                      display: true,\n                      text: \"Humidity Over Time\",\n                      font: { size: 20 },\n                    },\n                  },\n                  scales: {\n                    y: {\n                      title: {\n                        display: true,\n                        text: \"Humidity (%)\",\n                        font: { size: 16 },\n                      },\n                      min: 0,\n                      max: 100,\n                    },\n                    x: {\n                      title: {\n                        display: true,\n                        text: \"Hour\",\n                        font: { size: 16 },\n                      },\n                      ticks: {\n                        maxRotation: 90,\n                        minRotation: 45,\n                        font: { size: 14 },\n                      },\n                    },\n                  },\n                }}\n              />\n            </div>\n          </div>\n        </section>\n      )}\n\n\n\n\n\n    </section>\n  );\n}\n\nexport default GraphMain;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,OAAO,iBAAiB;AAExB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAID,MAAMI,MAAM,GAAG,kCAAkC;AAEjD,MAAMC,cAAc,GAAG,CACrB;EAAEC,MAAM,EAAE,cAAc;EAAEC,GAAG,EAAE;AAAa,CAAC,EAC7C;EAAED,MAAM,EAAE,cAAc;EAAEC,GAAG,EAAE;AAAU,CAAC,EAC1C;EAAED,MAAM,EAAE,cAAc;EAAEC,GAAG,EAAE;AAAW,CAAC,CAC5C;AAED,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmC,GAAG,EAAEC,MAAM,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACqC,GAAG,EAAEC,MAAM,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACuC,IAAI,EAAEC,OAAO,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC2C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACd,MAAM4C,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;MAChE,IAAIF,aAAa,EAAE;QACjB,MAAMG,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;QAChDJ,WAAW,CAACO,cAAc,CAACR,QAAQ,IAAI,KAAK,CAAC;QAC7CG,oBAAoB,CAACK,cAAc,CAACN,iBAAiB,IAAI,KAAK,CAAC;MACjE;IACF,CAAC;;IAED;IACAE,YAAY,CAAC,CAAC;;IAEd;IACAO,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAER,YAAY,CAAC;IAEhD,OAAO,MAAM;MACXO,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAET,YAAY,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN5C,SAAS,CAAC,MAAM;IACd,MAAMsD,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIC,SAAS,CAACC,WAAW,EAAE;QACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;UACZ,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACD,QAAQ;UACzC,MAAME,SAAS,GAAGH,QAAQ,CAACE,MAAM,CAACC,SAAS;UAC3C1B,MAAM,CAACwB,QAAQ,CAAC;UAChBtB,MAAM,CAACwB,SAAS,CAAC;QACnB,CAAC,EACAC,KAAK,IAAK;UACTC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/C3B,MAAM,CAAC,SAAS,CAAC;UACjBE,MAAM,CAAC,CAAC,QAAQ,CAAC;QACnB,CACF,CAAC;MACH,CAAC,MAAM;QACL0B,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;QAC5D7B,MAAM,CAAC,SAAS,CAAC;QACjBE,MAAM,CAAC,CAAC,QAAQ,CAAC;MACnB;IACF,CAAC;IAEDiB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENtD,SAAS,CAAC,MAAM;IACd,IAAIkC,GAAG,IAAIE,GAAG,EAAE;MACd,MAAM6B,KAAK,GAAG,QAAQ;MACtB,MAAMC,aAAa,GAAI,uDAAsDhC,GAAI,QAAOE,GAAI,UAAStB,MAAO,UAASmD,KAAM,EAAC;MAC5H,MAAME,YAAY,GAAI,+DAA8DjC,GAAI,QAAOE,GAAI,UAAStB,MAAO,UAASmD,KAAM,EAAC;MACnI,MAAMG,WAAW,GAAI,8DAA6DlC,GAAI,QAAOE,GAAI,gBAAetB,MAAO,UAASmD,KAAM,EAAC;MAEvII,KAAK,CAACH,aAAa,CAAC,CACjBI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdV,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAES,IAAI,CAAC;QAClD,IAAIA,IAAI,CAACC,GAAG,KAAK,GAAG,EAAE;UACpB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;QACxD;QAEA,MAAMC,QAAQ,GAAGH,IAAI,CAACI,IAAI;QAE1B,IAAIJ,IAAI,CAACK,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACP,IAAI,CAACK,OAAO,CAAC,IAAIL,IAAI,CAACK,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;UAC1E,MAAM;YAAEC,IAAI;YAAEC;UAAW,CAAC,GAAGV,IAAI,CAACW,IAAI;UACtC,MAAMC,eAAe,GAAGZ,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC,CAACQ,IAAI;UAC5C,MAAMC,cAAc,GAAGd,IAAI,CAACe,IAAI,GAAG,CAACf,IAAI,CAACe,IAAI,CAACC,KAAK,GAAG,KAAK,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;UAE/EnD,OAAO,CAACqC,QAAQ,CAAC;UACjBnD,iBAAiB,CAACyD,IAAI,CAAC;UACvBnD,YAAY,CAACoD,UAAU,CAAC;UACxBtD,YAAY,CAAC0D,cAAc,CAAC;UAC5B5D,cAAc,CAACgE,cAAc,CAACN,eAAe,CAAC,CAAC;QAEjD,CAAC,MAAM;UACL,MAAM,IAAIV,KAAK,CAAC,uCAAuC,CAAC;QAC1D;MACF,CAAC,CAAC,CACDiB,KAAK,CAAE9B,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC+B,OAAO,CAAC;MACxE,CAAC,CAAC;MAEJxB,KAAK,CAACF,YAAY,CAAC,CAChBG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACd,IAAI,CAACA,IAAI,CAACqB,IAAI,EAAE,MAAM,IAAInB,KAAK,CAAC,6BAA6B,CAAC;QAE9DZ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAES,IAAI,CAAC;QAEjD,MAAMsB,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;QACtB,MAAMC,WAAW,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC;QAGlC,MAAMC,iBAAiB,GAAG1B,IAAI,CAACqB,IAAI,CAACM,MAAM,CAAEC,IAAI,IAAK;UACnD,MAAMC,YAAY,GAAG,IAAIN,IAAI,CAACK,IAAI,CAACE,EAAE,GAAG,IAAI,CAAC;UAC7C,MAAMC,YAAY,GAAGF,YAAY,CAACJ,QAAQ,CAAC,CAAC;UAC5C,OAAOM,YAAY,GAAGP,WAAW,IAAIO,YAAY,GAAG,EAAE;QACxD,CAAC,CAAC;QAEF,MAAMC,aAAa,GAAGN,iBAAiB,CAACO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAEN,IAAI,KAAM;UAClEO,IAAI,EAAE,IAAIZ,IAAI,CAACK,IAAI,CAACE,EAAE,GAAG,IAAI,CAAC,CAACM,kBAAkB,CAAC,EAAE,EAAE;YACpDC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE;UACV,CAAC,CAAC;UACF/F,MAAM,EAAE2E,cAAc,CAACU,IAAI,CAACvB,OAAO,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC;UAC5CrE,GAAG,EAAEoF,IAAI,CAACvB,OAAO,CAAC,CAAC,CAAC,CAACkC,WAAW;UAChC9B,IAAI,EAAG,GAAE+B,IAAI,CAACC,KAAK,CAACb,IAAI,CAACjB,IAAI,CAACF,IAAI,CAAE;QAGtC,CAAC,CAAC,CAAC;QAEH7D,cAAc,CAAC,CAAC;UAAEuF,IAAI,EAAE,KAAK;UAAE5F,MAAM,EAAEU,WAAW;UAAET,GAAG,EAAE,iBAAiB;UAAEiE,IAAI,EAAG,GAAE+B,IAAI,CAACC,KAAK,CAAC1F,cAAc,CAAE;QAAI,CAAC,EAAE,GAAGiF,aAAa,CAAC,CAAC;QAEzI,MAAMU,YAAY,GAAGhB,iBAAiB,CAACO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAEN,IAAI,IAAK;UAChE,MAAMe,IAAI,GAAG,IAAIpB,IAAI,CAACK,IAAI,CAACE,EAAE,GAAG,IAAI,CAAC;UACrC,MAAMO,IAAI,GAAGM,IAAI,CAACP,kBAAkB,CAAC,EAAE,EAAE;YAAEC,IAAI,EAAE,SAAS;YAAEC,MAAM,EAAE;UAAS,CAAC,CAAC;UAC/E,OAAO;YACLD,IAAI,EAAEA,IAAI;YACVO,QAAQ,EAAEhB,IAAI,CAACjB,IAAI,CAACiC;UACtB,CAAC;QACH,CAAC,CAAC;QACFtD,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEmD,YAAY,CAAC;QACpDlF,iBAAiB,CAACkF,YAAY,CAAC;MAKjC,CAAC,CAAC,CACDvB,KAAK,CAAE9B,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;MAEzEO,KAAK,CAACD,WAAW,CAAC,CACjBE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdV,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAES,IAAI,CAAC;QAChD,IAAI,CAACA,IAAI,CAACqB,IAAI,EAAE,MAAM,IAAInB,KAAK,CAAC,6BAA6B,CAAC;QAE9D,MAAM2C,aAAa,GAAG7C,IAAI,CAACqB,IAAI,CAACa,GAAG,CAAC,CAACN,IAAI,EAAEkB,KAAK,KAAK;UACnD,MAAMH,IAAI,GAAG,IAAIpB,IAAI,CAACK,IAAI,CAACE,EAAE,GAAG,IAAI,CAAC;UACrC,MAAMiB,OAAO,GAAGJ,IAAI,CAACK,kBAAkB,CAAC,OAAO,EAAE;YAAEC,OAAO,EAAE;UAAO,CAAC,CAAC;UAErE,OAAO;YACLC,GAAG,EAAEJ,KAAK,KAAK,CAAC,GAAG,OAAO,GAAGC,OAAO;YACpCtC,IAAI,EAAG,GAAE+B,IAAI,CAACC,KAAK,CAACb,IAAI,CAACnB,IAAI,CAAC0C,GAAG,CAAE,KAAIX,IAAI,CAACC,KAAK,CAACb,IAAI,CAACnB,IAAI,CAAC2C,GAAG,CAAE,GAAE;YACnE7G,MAAM,EAAE2E,cAAc,CAACU,IAAI,CAACvB,OAAO,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC;YAC5CrE,GAAG,EAAEoF,IAAI,CAACvB,OAAO,CAAC,CAAC,CAAC,CAACkC;UACvB,CAAC;QACH,CAAC,CAAC;QAEFzF,aAAa,CAAC+F,aAAa,CAAC;MAC9B,CAAC,CAAC,CACD1B,KAAK,CAAE9B,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC,CAAC;IAE/E;EACF,CAAC,EAAE,CAAC5B,GAAG,EAAEE,GAAG,EAAEZ,cAAc,EAAEE,WAAW,CAAC,CAAC;EAG3C,SAASiE,cAAcA,CAACmC,QAAQ,EAAE;IAChC,OAAQ,qCAAoCA,QAAS,SAAQ;EAC/D;;EAEA;EACA,MAAMC,YAAY,GAAI,YAAWvF,QAAQ,GAAG,YAAY,GAAG,EAAG,GAAEE,iBAAiB,GAAG,qBAAqB,GAAG,EAAG,EAAC;EAEhH,oBACE9B,OAAA;IAASoH,SAAS,EAAED,YAAa;IAAAE,QAAA,gBAE/BrH,OAAA;MAASoH,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC9BrH,OAAA;QAAKoH,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BrH,OAAA;UAAKsH,GAAG,EAAC,oBAAoB;UAACjH,GAAG,EAAC;QAAY;UAAAkH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACN1H,OAAA;QAAKoH,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BrH,OAAA;UAAAqH,QAAA,EAAK3F,IAAI,GAAI,GAAEA,IAAK,EAAC,GAAG;QAAqB;UAAA6F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEV1H,OAAA;MAASoH,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC7BrH,OAAA;QAAKoH,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BrH,OAAA;UAAAqH,QAAA,EAAKzG,cAAc,GAAI,GAAEyF,IAAI,CAACC,KAAK,CAAC1F,cAAc,CAAE,IAAG,GAAG;QAAY;UAAA2G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACN1H,OAAA;QAAKoH,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BrH,OAAA;UAAKsH,GAAG,EAAExG,WAAW,IAAI,kBAAmB,CAAC;UAAA;UAC3CT,GAAG,EAAC;QAAiB;UAAAkH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACN1H,OAAA;QAAKoH,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBrH,OAAA;UAAAqH,QAAA,EAAKrG,SAAS,GAAI,eAAcA,SAAU,MAAK,GAAG;QAAuB;UAAAuG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,eACN1H,OAAA;QAAKoH,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBrH,OAAA;UAAAqH,QAAA,EAAKnG,SAAS,KAAK,IAAI,GAAI,cAAamF,IAAI,CAACC,KAAK,CAACpF,SAAS,CAAE,IAAG,GAAG;QAAuB;UAAAqG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEV1H,OAAA;MAASoH,SAAS,EAAC,SAAS;MAAAC,QAAA,GACzB7G,WAAW,CAACuF,GAAG,CAAC,CAAC4B,UAAU,EAAEhB,KAAK,kBACjC3G,OAAA;QAAKoH,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBrH,OAAA;UAAAqH,QAAA,EAAKM,UAAU,CAAC3B;QAAI;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1B1H,OAAA;UAAKsH,GAAG,EAAEK,UAAU,CAACvH,MAAO;UAACC,GAAG,EAAEsH,UAAU,CAACtH;QAAI;UAAAkH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpD1H,OAAA;UAAAqH,QAAA,EAAKM,UAAU,CAACrD;QAAI;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHGf,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI/B,CACN,CAAC,eACF1H,OAAA;QAAKoH,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBrH,OAAA;UAAAuH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1H,OAAA;UAAAuH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAKTtG,cAAc,CAACiD,MAAM,GAAG,CAAC,iBACxBrE,OAAA;MAASoH,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC9BrH,OAAA;QAAAqH,QAAA,EAAI;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC1H,OAAA;QAAK4H,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAR,QAAA,eAChCrH,OAAA;UAAK4H,KAAK,EAAE;YAAEE,QAAQ,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAQ,CAAE;UAAAV,QAAA,eACjDrH,OAAA,CAACX,IAAI;YACHwE,IAAI,EAAE;cACJmE,MAAM,EAAE5G,cAAc,CAAC2E,GAAG,CAAElC,IAAI,IAAKA,IAAI,CAACqC,IAAI,CAAC;cAC/C+B,QAAQ,EAAE,CACR;gBACEC,KAAK,EAAE,cAAc;gBACrBrE,IAAI,EAAEzC,cAAc,CAAC2E,GAAG,CAAElC,IAAI,IAAKA,IAAI,CAAC4C,QAAQ,CAAC;gBACjD0B,IAAI,EAAE,IAAI;gBACVC,WAAW,EAAE,SAAS;gBACtBC,eAAe,EAAE,sBAAsB;gBACvCC,OAAO,EAAE;cACX,CAAC;YAEL,CAAE;YACFC,OAAO,EAAE;cACPC,UAAU,EAAE,IAAI;cAChBC,mBAAmB,EAAE,KAAK;cAC1BC,OAAO,EAAE;gBACPC,MAAM,EAAE;kBAAE7F,QAAQ,EAAE;gBAAM,CAAC;gBAC3B8F,KAAK,EAAE;kBACLC,OAAO,EAAE,IAAI;kBACbC,IAAI,EAAE,oBAAoB;kBAC1BC,IAAI,EAAE;oBAAEC,IAAI,EAAE;kBAAG;gBACnB;cACF,CAAC;cACDC,MAAM,EAAE;gBACNC,CAAC,EAAE;kBACDN,KAAK,EAAE;oBACLC,OAAO,EAAE,IAAI;oBACbC,IAAI,EAAE,cAAc;oBACpBC,IAAI,EAAE;sBAAEC,IAAI,EAAE;oBAAG;kBACnB,CAAC;kBACD/B,GAAG,EAAE,CAAC;kBACND,GAAG,EAAE;gBACP,CAAC;gBACDmC,CAAC,EAAE;kBACDP,KAAK,EAAE;oBACLC,OAAO,EAAE,IAAI;oBACbC,IAAI,EAAE,MAAM;oBACZC,IAAI,EAAE;sBAAEC,IAAI,EAAE;oBAAG;kBACnB,CAAC;kBACDI,KAAK,EAAE;oBACLC,WAAW,EAAE,EAAE;oBACfC,WAAW,EAAE,EAAE;oBACfP,IAAI,EAAE;sBAAEC,IAAI,EAAE;oBAAG;kBACnB;gBACF;cACF;YACF;UAAE;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMM,CAAC;AAEd;AAACnH,EAAA,CAjSQD,SAAS;AAAAiJ,EAAA,GAATjJ,SAAS;AAmSlB,eAAeA,SAAS;AAAC,IAAAiJ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}