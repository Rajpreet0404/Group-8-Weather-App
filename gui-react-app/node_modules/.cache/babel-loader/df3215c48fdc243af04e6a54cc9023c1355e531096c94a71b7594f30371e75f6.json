{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajpr\\\\QMUL\\\\Year 2\\\\Semester B\\\\ECS522U - Graphical User Interfaces\\\\Group-8-Weather-App\\\\gui-react-app\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./reset.css\"; // Import the CSS file\nimport \"./homestyle.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"fa0315bf1aaefb0d246fe0e1feeca3b3\";\n/*\r\nconst lat = 51.525012;\r\nconst lon = -0.033456;\r\nconst units = \"metric\";\r\nconst currentApiURL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\r\nconst hourlyApiURL = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\r\n*/\n\n/*\r\nconst dailyTemps = [\r\n  { day: \"Monday\", temp: \"15°/6°\", imgSrc: \"/image9.png\", alt: \"Heavy rain\"},\r\n  { day: \"Tuesday\", temp: \"11°/3°\", imgSrc: \"/image4.png\", alt: \"Partly cloudy\" },\r\n  { day: \"Wednesday\", temp: \"15°/8°\", imgSrc: \"/image15.png\", alt: \"Partly cloudy\" },\r\n  { day: \"Thursday\", temp: \"14°/7°\", imgSrc: \"/image7.png\", alt: \"Lightning\" },\r\n  { day: \"Friday\", temp: \"21°/10°\", imgSrc: \"/image5.png\", alt: \"Sunny\" },\r\n];\r\n*/\n\nconst activityImages = [{\n  imgSrc: \"/image11.png\",\n  alt: \"Basketball\"\n}, {\n  imgSrc: \"/image12.png\",\n  alt: \"Running\"\n}, {\n  imgSrc: \"/image13.png\",\n  alt: \"Football\"\n}];\nfunction Home() {\n  _s();\n  const [hourlyTemps, setHourlyTemps] = useState([]);\n  const [dailyTemps, setDailyTemps] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(null);\n  const [feelsLike, setFeelsLike] = useState(null);\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [city, setCity] = useState(\"\");\n  useEffect(() => {\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          setLat(latitude);\n          setLon(longitude);\n        }, error => {\n          console.error(\"Error getting location:\", error);\n          setLat(51.525012);\n          setLon(-0.033456);\n        });\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n        setLat(51.525012);\n        setLon(-0.033456);\n      }\n    };\n    getLocation();\n  }, []);\n  useEffect(() => {\n    if (lat && lon) {\n      const units = \"metric\";\n      const currentApiURL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n      const hourlyApiURL = `https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n      const dailyApiURL = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&cnt=6&appid=${apiKey}&units=${units}`;\n\n      // Fetch current weather (current hour)\n      fetch(currentApiURL).then(response => response.json()).then(data => {\n        console.log(\"Current Weather API response:\", data);\n        if (data.cod !== 200) {\n          throw new Error(\"Error fetching current weather data\");\n        }\n        const cityName = data.name;\n        if (data.weather && Array.isArray(data.weather) && data.weather.length > 0) {\n          const {\n            temp,\n            feels_like\n          } = data.main;\n          const weatherIconCode = data.weather[0].icon;\n          const windSpeedInMph = data.wind ? (data.wind.speed * 2.237).toFixed(1) : \"N/A\";\n          setCity(cityName);\n          setCurrentWeather(temp);\n          setFeelsLike(feels_like);\n          setWindSpeed(windSpeedInMph);\n          setWeatherIcon(getWeatherIcon(weatherIconCode));\n        } else {\n          throw new Error(\"Weather data is missing or malformed.\");\n        }\n      }).catch(error => {\n        console.error(\"❌ Error fetching current weather data:\", error.message);\n      });\n\n      // Fetch hourly forecast (remaining hours)\n      fetch(hourlyApiURL).then(response => response.json()).then(data => {\n        if (!data.list) throw new Error(\"Invalid API response format\");\n        const now = new Date();\n        const currentHour = now.getHours();\n        const filteredForecasts = data.list.filter(item => {\n          const forecastDate = new Date(item.dt * 1000);\n          const forecastHour = forecastDate.getHours();\n          return forecastHour > currentHour && forecastHour < 24;\n        });\n        const nextFiveHours = filteredForecasts.slice(0, 5).map(item => ({\n          time: new Date(item.dt * 1000).toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          }),\n          imgSrc: getWeatherIcon(item.weather[0].icon),\n          alt: item.weather[0].description,\n          temp: `${Math.round(item.main.temp)}°C`\n        }));\n        setHourlyTemps([{\n          time: \"Now\",\n          imgSrc: weatherIcon,\n          alt: \"Current weather\",\n          temp: `${Math.round(currentWeather)}°C`\n        }, ...nextFiveHours]);\n      }).catch(error => console.error(\"❌ Error fetching weather data:\", error));\n      fetch(dailyApiURL).then(response => response.json()).then(data => {\n        if (!data.list) throw new Error(\"Invalid API response format\");\n        const nextSevenDays = data.list.map((item, index) => {\n          const date = new Date(item.dt * 1000);\n          const dayName = date.toLocaleDateString(\"en-US\", {\n            weekday: \"long\"\n          });\n          return {\n            day: index === 0 ? \"Today\" : dayName,\n            temp: `${Math.round(item.temp.max)}°/${Math.round(item.temp.min)}°`,\n            imgSrc: getWeatherIcon(item.weather[0].icon),\n            alt: item.weather[0].description\n          };\n        });\n        setDailyTemps(nextSevenDays);\n      }).catch(error => console.error(\"❌ Error fetching daily forecast:\", error));\n    }\n  }, [lat, lon, currentWeather, weatherIcon]);\n  function getWeatherIcon(iconCode) {\n    return `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"locationBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherimage\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/locationimage.png\",\n          alt: \"Background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"locationtext\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: city ? `${city}` : \"Loading location...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"weatherBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentweather\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currentWeather ? `${Math.round(currentWeather)}°C` : \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weathericon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: weatherIcon || \"/defaultIcon.png\" // fallback to default icon if loading\n          ,\n          alt: \"Current Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"windspeed\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: windSpeed ? `Wind Speed: ${windSpeed} mph` : \"Loading wind speed...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feelslike\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: feelsLike !== null ? `Feels like ${Math.round(feelsLike)}°C` : \"Loading feels like...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tempBox\",\n      children: [hourlyTemps.map((hourlyTemp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"miniTemp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hourlyTemp.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hourlyTemp.imgSrc,\n          alt: hourlyTemp.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hourlyTemp.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"miniTemp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dailyTempBox\",\n      children: dailyTemps.map((dailyTemp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dailyTemp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: dailyTemp.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dailyTemp.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: dailyTemp.imgSrc,\n          alt: dailyTemp.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"activitiesBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Best activities to do today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activityImages\",\n        children: activityImages.map((activityImage, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: activityImage.imgSrc,\n            alt: activityImage.alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"WHPuQxf6LpBelUNvAyBfSgQgtjc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","apiKey","activityImages","imgSrc","alt","Home","_s","hourlyTemps","setHourlyTemps","dailyTemps","setDailyTemps","currentWeather","setCurrentWeather","weatherIcon","setWeatherIcon","windSpeed","setWindSpeed","feelsLike","setFeelsLike","lat","setLat","lon","setLon","city","setCity","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","console","log","units","currentApiURL","hourlyApiURL","dailyApiURL","fetch","then","response","json","data","cod","Error","cityName","name","weather","Array","isArray","length","temp","feels_like","main","weatherIconCode","icon","windSpeedInMph","wind","speed","toFixed","getWeatherIcon","catch","message","list","now","Date","currentHour","getHours","filteredForecasts","filter","item","forecastDate","dt","forecastHour","nextFiveHours","slice","map","time","toLocaleTimeString","hour","minute","description","Math","round","nextSevenDays","index","date","dayName","toLocaleDateString","weekday","day","max","min","iconCode","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","hourlyTemp","dailyTemp","activityImage","_c","$RefreshReg$"],"sources":["C:/Users/Rajpr/QMUL/Year 2/Semester B/ECS522U - Graphical User Interfaces/Group-8-Weather-App/gui-react-app/src/pages/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./reset.css\"; // Import the CSS file\r\nimport \"./homestyle.css\"; // Import the CSS file\r\n\r\nconst apiKey = \"fa0315bf1aaefb0d246fe0e1feeca3b3\";\r\n/*\r\nconst lat = 51.525012;\r\nconst lon = -0.033456;\r\nconst units = \"metric\";\r\nconst currentApiURL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\r\nconst hourlyApiURL = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\r\n*/\r\n\r\n/*\r\nconst dailyTemps = [\r\n  { day: \"Monday\", temp: \"15°/6°\", imgSrc: \"/image9.png\", alt: \"Heavy rain\"},\r\n  { day: \"Tuesday\", temp: \"11°/3°\", imgSrc: \"/image4.png\", alt: \"Partly cloudy\" },\r\n  { day: \"Wednesday\", temp: \"15°/8°\", imgSrc: \"/image15.png\", alt: \"Partly cloudy\" },\r\n  { day: \"Thursday\", temp: \"14°/7°\", imgSrc: \"/image7.png\", alt: \"Lightning\" },\r\n  { day: \"Friday\", temp: \"21°/10°\", imgSrc: \"/image5.png\", alt: \"Sunny\" },\r\n];\r\n*/\r\n\r\nconst activityImages = [\r\n  { imgSrc: \"/image11.png\", alt: \"Basketball\" },\r\n  { imgSrc: \"/image12.png\", alt: \"Running\" },\r\n  { imgSrc: \"/image13.png\", alt: \"Football\" },\r\n];\r\n\r\nfunction Home() {\r\n  const [hourlyTemps, setHourlyTemps] = useState([]);\r\n  const [dailyTemps, setDailyTemps] = useState([]);\r\n  const [currentWeather, setCurrentWeather] = useState(null);\r\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\r\n  const [windSpeed, setWindSpeed] = useState(null);\r\n  const [feelsLike, setFeelsLike] = useState(null);\r\n  const [lat, setLat] = useState(null);\r\n  const [lon, setLon] = useState(null);\r\n  const [city, setCity] = useState(\"\"); \r\n\r\n  useEffect(() => {\r\n    const getLocation = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const latitude = position.coords.latitude;\r\n            const longitude = position.coords.longitude;\r\n            setLat(latitude);\r\n            setLon(longitude);\r\n          },\r\n          (error) => {\r\n            console.error(\"Error getting location:\", error);\r\n            setLat(51.525012);  \r\n            setLon(-0.033456);   \r\n          }\r\n        );\r\n      } else {\r\n        console.log(\"Geolocation is not supported by this browser.\");\r\n        setLat(51.525012);  \r\n        setLon(-0.033456);  \r\n      }\r\n    };\r\n\r\n    getLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (lat && lon) {\r\n      const units = \"metric\";\r\n      const currentApiURL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\r\n      const hourlyApiURL = `https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\r\n      const dailyApiURL = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&cnt=6&appid=${apiKey}&units=${units}`;\r\n\r\n      // Fetch current weather (current hour)\r\n      fetch(currentApiURL)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Current Weather API response:\", data);\r\n          if (data.cod !== 200) {\r\n            throw new Error(\"Error fetching current weather data\");\r\n          }\r\n\r\n          const cityName = data.name;\r\n\r\n          if (data.weather && Array.isArray(data.weather) && data.weather.length > 0) {\r\n            const { temp, feels_like } = data.main;\r\n            const weatherIconCode = data.weather[0].icon;\r\n            const windSpeedInMph = data.wind ? (data.wind.speed * 2.237).toFixed(1) : \"N/A\"; \r\n\r\n            setCity(cityName); \r\n            setCurrentWeather(temp);\r\n            setFeelsLike(feels_like);\r\n            setWindSpeed(windSpeedInMph); \r\n            setWeatherIcon(getWeatherIcon(weatherIconCode));\r\n          } else {\r\n            throw new Error(\"Weather data is missing or malformed.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"❌ Error fetching current weather data:\", error.message);\r\n        });\r\n\r\n      // Fetch hourly forecast (remaining hours)\r\n      fetch(hourlyApiURL)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (!data.list) throw new Error(\"Invalid API response format\");\r\n\r\n          const now = new Date();\r\n          const currentHour = now.getHours();\r\n\r\n          const filteredForecasts = data.list.filter((item) => {\r\n            const forecastDate = new Date(item.dt * 1000);\r\n            const forecastHour = forecastDate.getHours();\r\n            return forecastHour > currentHour && forecastHour < 24;\r\n          });\r\n\r\n          const nextFiveHours = filteredForecasts.slice(0, 5).map((item) => ({\r\n            time: new Date(item.dt * 1000).toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            }),\r\n            imgSrc: getWeatherIcon(item.weather[0].icon),\r\n            alt: item.weather[0].description,\r\n            temp: `${Math.round(item.main.temp)}°C`,\r\n          }));\r\n\r\n          setHourlyTemps([{ time: \"Now\", imgSrc: weatherIcon, alt: \"Current weather\", temp: `${Math.round(currentWeather)}°C` }, ...nextFiveHours]);\r\n        })\r\n        .catch((error) => console.error(\"❌ Error fetching weather data:\", error));\r\n\r\n        fetch(dailyApiURL)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (!data.list) throw new Error(\"Invalid API response format\");\r\n\r\n          const nextSevenDays = data.list.map((item, index) => {\r\n            const date = new Date(item.dt * 1000);\r\n            const dayName = date.toLocaleDateString(\"en-US\", { weekday: \"long\" });\r\n\r\n            return {\r\n              day: index === 0 ? \"Today\" : dayName,\r\n              temp: `${Math.round(item.temp.max)}°/${Math.round(item.temp.min)}°`,\r\n              imgSrc: getWeatherIcon(item.weather[0].icon),\r\n              alt: item.weather[0].description,\r\n            };\r\n          });\r\n\r\n          setDailyTemps(nextSevenDays);\r\n        })\r\n        .catch((error) => console.error(\"❌ Error fetching daily forecast:\", error));\r\n\r\n    }\r\n  }, [lat, lon, currentWeather, weatherIcon]); \r\n\r\n\r\n  function getWeatherIcon(iconCode) {\r\n    return `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\r\n  }\r\n\r\n  return (\r\n    <section className=\"app\">\r\n      {/* Location flex box */}\r\n      <section className=\"locationBox\">\r\n        <div className=\"weatherimage\">\r\n          <img src=\"/locationimage.png\" alt=\"Background\" />\r\n        </div>\r\n        <div className=\"locationtext\">\r\n          <h1>{city ? `${city}` : \"Loading location...\"}</h1>\r\n        </div>\r\n      </section>\r\n      {/* Weather flex box */}\r\n      <section className=\"weatherBox\">\r\n        <div className=\"currentweather\">\r\n          <h1>{currentWeather ? `${Math.round(currentWeather)}°C` : \"Loading...\"}</h1>\r\n        </div>\r\n        <div className=\"weathericon\">\r\n          <img src={weatherIcon || \"/defaultIcon.png\"} // fallback to default icon if loading\r\n            alt=\"Current Weather\"/>\r\n        </div>\r\n        <div className=\"windspeed\">\r\n          <h1>{windSpeed ? `Wind Speed: ${windSpeed} mph` : \"Loading wind speed...\"}</h1>\r\n        </div>\r\n        <div className=\"feelslike\">\r\n          <h1>{feelsLike !== null ? `Feels like ${Math.round(feelsLike)}°C` : \"Loading feels like...\"}</h1>\r\n        </div>\r\n      </section> \r\n      {/* Hourly temperature overview */}\r\n      <section className=\"tempBox\">\r\n        {hourlyTemps.map((hourlyTemp, index) => (\r\n          <div className=\"miniTemp\" key={index}>\r\n            <h1>{hourlyTemp.time}</h1>\r\n            <img src={hourlyTemp.imgSrc} alt={hourlyTemp.alt} />\r\n            <h1>{hourlyTemp.temp}</h1>\r\n          </div>\r\n        ))}\r\n        <div className=\"miniTemp\">\r\n          <h1></h1>\r\n          <button>...</button>\r\n          <h1></h1>\r\n        </div>\r\n      </section>\r\n      {/* Daily temperature overview */}\r\n      <section className=\"dailyTempBox\">\r\n        {dailyTemps.map((dailyTemp, index) => (\r\n          <div className=\"dailyTemp\" key={index}>\r\n            <h1>{dailyTemp.day}</h1>\r\n            <h2>{dailyTemp.temp}</h2>\r\n            <img src={dailyTemp.imgSrc} alt={dailyTemp.alt} />\r\n          </div>\r\n        ))}\r\n      </section>\r\n      {/* Activities flex box */}\r\n      <section className=\"activitiesBox\">\r\n        <h1>Best activities to do today</h1>\r\n        <div className=\"activityImages\">\r\n          {activityImages.map((activityImage, index) => (\r\n            <div className=\"activity\" key={index}>\r\n              <img src={activityImage.imgSrc} alt={activityImage.alt} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}